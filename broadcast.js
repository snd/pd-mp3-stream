// Generated by CoffeeScript 1.3.3
var connections, http, inputServer, net, outputServer, pureData;

net = require('net');

http = require('http');

pureData = null;

inputServer = net.createServer(function(c) {
  console.log('pure data connected');
  if (pureData != null) {
    console.log('pure data already connected - closing connection');
    c.destroy();
    return;
  }
  pureData = c;
  return pureData.on('end', function() {
    console.log('pure data disconnected');
    pureData.removeAllListeners();
    return pureData = null;
  });
});

inputServer.listen(9091, function() {
  return console.log('listening on port 9091 and waiting for pure data to connect');
});

connections = 0;

outputServer = http.createServer(function(req, res) {
  var onData, onEnd;
  if (pureData == null) {
    console.log('pure data is not connected - closing connection');
    res.writeHead(404);
    res.end('pure data is not connected');
    return;
  }
  connections = connections + 1;
  console.log("browser connected. " + connections + " connected");
  res.writeHead(200, {
    'Content-Type': 'audio/mp3',
    'Transfer-Encoding': 'chunked'
  });
  onData = function(data) {
    return res.write(data);
  };
  onEnd = function() {
    console.log('pure data disconnected');
    return req.end();
  };
  pureData.on('data', onData);
  return req.on('close', function() {
    connections = connections - 1;
    if (pureData != null) {
      console.log("browser disconnected. " + connections + " connected");
      pureData.removeListener('data', onData);
      return pureData.removeListener('end', onEnd);
    }
  });
});

outputServer.listen(9092, function() {
  return console.log('listening on port 9092 and waiting for browsers to connect');
});
